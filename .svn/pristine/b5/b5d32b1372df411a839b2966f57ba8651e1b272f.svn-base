<?php
// +----------------------------------------------------------------------
// |
// +----------------------------------------------------------------------
// | Copyright (c) 2017--20xx年 捞月狗. All rights reserved.
// +----------------------------------------------------------------------
// | File:     AccountTask.php
// |
// | Author:   huzhichao@laoyuegou.com
// | Created:  2017-xx-xx
// +----------------------------------------------------------------------
class SwooleTask extends \Phalcon\Cli\Task
{
	/**
	 * swoole的运行模式
	 */
	public static $daemonize = false;
    /**
	 * swoole server instance
	 */
	public static $swoole = null;
	/**
	 * 执行耗时任务的worker数量
	 */
	public static $io_worker_nums = 4;
	
	/**
	 * io_worker服务使用的端口号
	 */
	public static $io_port = 16000;
	
	/**
	 * 执行任务分发的worker数量
	 */
	public $timer_worker_nums = 1;

	/**
	 * 执行任务分发的worker数量
	 */
	public $task_max_request = 2000;
	
	/**
	 * timer worker运行频率  秒
	 */
	public static $timer_rate = 0.1;

	public static $id = 1;





	public function indexAction(array $params) 
	{
		try{
			echo 'Welcome to you';

			$this->logger->info('SwooleTask indexAction' . 'Welcome to you');
		
		}catch (\Exception $e) {
		    $this->logger->error($e->getMessage());
		}
	}


	public function whileAction(array $params) 
	{
		try{

			$this->swoole();
		
		}catch (\Exception $e) {
		    $this->logger->error($e->getMessage());
		}
	}

	public static function run()
	{
		while (true) {
			self::$swoole->task(json_encode(array('id' => '11111')));
		}
	}


	public function swoole() 
	{
		try{
			self::$swoole = new \Swoole\Server("127.0.0.1", '8888');

			//参数设置
			self::$swoole->set(array(
				'task_worker_num' => self::$io_worker_nums,
				'worker_num' => $this->timer_worker_nums,
				'task_max_request' => $this->task_max_request,
				'daemonize' => self::$daemonize,
			));

			//设置 Receive 防止轮空
			self::$swoole->on('Receive', function($serv, $fd, $from_id, $data) {
				$server->close($fd);
			});

			//设置Task进程任务
			self::$swoole->on('Task', function ($serv, $task_id, $from_id, $data) {

				$task_data = json_decode($data,true);
				
                try
                {
                    print_r($task_data);
                }
                catch (\Exception $e)
                {
                    print_r($e);
                }

				// 发送结果
				$serv->finish(json_encode($task_data));
				
			});

			//设置任务完成之后的回调
			self::$swoole->on('Finish', function ($serv, $task_id, $data) {
				var_dump($data);
			});

			//设置分发服务
			self::$swoole->on('WorkerStart', function ($serv, $worker_id){
				if ($serv->taskworker === false) 
				{
					//swoole_timer_tick(self::$timer_rate,function (){
						self::run();
					//});
				}
			});

			self::displayUI();

			self::$swoole->start();

			//var_dump(self::$swoole);exit;
		
		}catch (\Exception $e) {
		    $this->logger->error($e->getMessage());
		}
	}

	public static function displayUI() 
	{
		echo "
		                     .::::.
		                   .::::::::.
		                  :::::::::::  
		              ..:::::::::::'
		            '::::::::::::'
		              :::::::::::         Swoole Is Run
		         '::::::::::::::..
		              ..::::::::::::.
		            ``::::::::::::::::
		             ::::``:::::::::'        :::::
		            ::::'   ':::::'       .::::::::.
		          .::::'      ::::     ::::::::'::::.
		         .:::'       :::::  ::::::::::' '::::::
		        :::'        :::::.:::::::::'      ':::::.
		       .::'         ::::::::::::::'         ``::::.
		   ...:::           ::::::::::::'              ``:::
		  ```` ':.          ':::::::::'                  ::::..
		                     '::::::'                    ':'````..
		";
	}








}